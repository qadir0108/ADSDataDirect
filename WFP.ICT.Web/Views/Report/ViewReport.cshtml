@using System.Threading.Tasks
@using ADSDataDirect.Enums
@using WFP.ICT.Data.Entities
@using WFP.ICT.Enum
@using WFP.ICT.Web.Helpers

@model WFP.ICT.Web.Models.CampaignReportVM

@{
    ViewData["Title"] = "Campaign Report";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var LoggedInUser = Session["user"] as WFPUser;
    var IsLoggedIn = LoggedInUser != null;
    var IsAdmin = LoggedInUser != null && (LoggedInUser.UserType == (int)UserTypeEnum.Admin);
}

@{
    Html.RenderPartial("_HeaderCopy");
}

<div class="container">

        <br />
        @if (TempData["Success"] != null)
        {
            <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
        }
        @if (TempData["Error"] != null)
        {
            <p class="alert alert-danger" id="successMessage">@TempData["Error"]</p>
        }

    <div class="row">
        <div class="col-md-11 headertab">
            Campaign Tracking - Report
        </div>
        <div class="col-md-1 listing-action" id="divTools" style="text-align: right">
            @if (IsAdmin)
            {
                <a href="#" class="btn btn-default" id="btnRefresh" data-tooltip="tooltip" title="Refresh from ProData"><span class="glyphicon glyphicon-refresh"></span></a>
            }
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Order Number
                </th>
                <th>
                    Campaign Name
                </th>
                <th>
                    White Label
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    Opened
                </th>
                <th>
                    Clicked
                </th>
                <th>
                    Status
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.HiddenFor(modelItem => modelItem.OrderNumber)
                    @Html.DisplayFor(modelItem => Model.OrderNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.CampaignName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.WhiteLabel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.Opened)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.Clicked)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.Status)
                </td>
                <td>
                    <a href="#" class="btn btn-default" id="btnDrill" data-tooltip="tooltip" title="Drill Down"><span class="glyphicon glyphicon-search"></span></a>
                    <a href="#" class="btn btn-default" id="btnRefreshLog" data-tooltip="tooltip" title="Refresh Log"><span class="glyphicon glyphicon-refresh"></span></a>
                    <a href="~/Report/Report?id=@Model.Id" target="_blank" class="btn btn-default" id="btnDownload" data-tooltip="tooltip" title="Download"><span class="glyphicon glyphicon-download"></span></a>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="row">
        <div class="col-md-12">
            <div id="divLog">
                <textarea id="txtLog" class="form-group col-md-12"></textarea>
            </div>
        </div>
    </div>

    <div id="divDrillDown">

        <div class="row">
            <div class="col-md-6">

                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.CampaignName)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.CampaignName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.IONumber)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.IONumber)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.StartDate)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.EmailsSent)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.EmailsSent)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Opened)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Opened)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.OpenedPercentage)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.OpenedPercentage)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Clicked)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ClickedPercentage)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.CTRPercentage)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.CTRPercentage)
                    </dd>

                </dl>

            </div>
            <div class="col-md-6">

                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                IO #
                            </th>
                            <th>
                                Link
                            </th>
                            <th>
                                Quantity Per Link
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
    {
        foreach (var item in Model.PerLink)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IONumber)
            </td>
            <td>
                @Html.Raw(string.Format("<a href=\"{0}\" target=\"blank\">{1}</a>", item.Link, item.Link.Substring(0, item.Link.Length > 80 ? 80 : item.Link.Length)))
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityDetail)
            </td>
        </tr>
            }
    }
                    </tbody>
                </table>

            </div>
        </div>


    </div>

</div>

<script type="text/javascript">

                    var wfp = wfp || {};

                    $(document).ready(function () {

                        $("#divDrillDown").hide();
                        $('#txtLog').hide();

                        $("#btnDrill").click(function () {
                            $("#divDrillDown").slideToggle("slow");
                        });

                        $('#btnRefresh').click(function (e) {
                            debugger;

                            e.preventDefault();

                            var dataToPost = {
                                OrderNumber: $('#OrderNumber').val()
                            };

                            $.ajax({
                                type: "POST",
                                url: "/Report/RefreshProData",
                                data: JSON.stringify(dataToPost),
                                contentType: "application/json; charset=utf-8",
                                success: function (response) {
                                    debugger;
                                    if (response === "") wfp.reload();
                                    if (response.IsSucess) {
                                        wfp.showSuccess('ProData has been refreshed successfully.');
                                        wfp.reload();
                                    } else {
                                        wfp.showError(response.ErrorMessage);
                                    }
                                },
                                failure: function (response) {
                                    wfp.showError('There is erorr in service call.');
                                },
                                complete: function () {
                                }
                            });

                        });

                        $('#btnRefreshLog').click(function (e) {

                            debugger;

                            e.preventDefault();

                            var dataToPost = {
                                OrderNumber: $('#OrderNumber').val()
                            };

                            $.ajax({
                                type: "POST",
                                url: "/Report/RefreshProDataLog",
                                data: JSON.stringify(dataToPost),
                                contentType: "application/json; charset=utf-8",
                                success: function (response) {
                                    debugger;
                                    if (response === "") wfp.reload();
                                    if (response.IsSucess) {
                                        wfp.showSuccess('Log has been refreshed successfully.');
                                        var text = "";
                                        for (var i = 0; i < response.Result.length; i++) {
                                            text += response.Result[i].CreatedAt + " " + response.Result[i].Message + "\n";
                                        }
                                        $('#txtLog').text(text);
                                        $("#txtLog").fadeIn("slow");
                                    } else {
                                        wfp.showError(response.ErrorMessage);
                                    }
                                },
                                failure: function (response) {
                                    wfp.showError('There is erorr in service call.');
                                },
                                complete: function () {
                                }
                            });

                        });
                    });
                </script>
