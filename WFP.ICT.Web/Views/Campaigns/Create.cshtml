@using ADSDataDirect.Enums
@using WFP.ICT.Data.Entities
@using WFP.ICT.Enum
@using WFP.ICT.Web.Models
@model WFP.ICT.Web.Models.CampaignVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var LoggedInUser = Session["user"] as WfpUser;
    var IsLoggedIn = LoggedInUser != null;
    var IsAdmin = LoggedInUser != null && (LoggedInUser.UserType == (int)UserType.Admin);
}

<h2>New Order<span class="small"></span></h2>

@using (Html.BeginForm("Create", "Campaigns", FormMethod.Post, new { @id="form1" }))
{
    @Html.AntiForgeryToken()

    @*<div class="tabbable-panel">
        <div class="tabbable-line">
            <ul class="nav nav-tabs ">
                <li class="active">
                    <a href="#tab_default_1" data-toggle="tab">
                        Details
                    </a>
                </li>
                <li>
                    <a href="#tab_default_2" data-toggle="tab">
                        Segment Data
                    </a>
                </li>
                <li>
                    <a href="#tab_default_3" data-toggle="tab">
                        Digital Plus
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tab_default_1">
                    
                </div>
                <div class="tab-pane" id="tab_default_2">
                    
                </div>
                <div class="tab-pane" id="tab_default_3">
                    
                </div>
            </div>
        </div>
    </div>*@

        <div class="form-horizontal">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.OrderNumber)
            
            <div class="tabbable-panel">
                <div class="tabbable-line">
                    <ul class="nav nav-tabs ">
                        <li class="active">
                            <a href="#tab_default_1" data-toggle="tab">
                                Details
                            </a>
                        </li>
                        <li>
                            <a href="#tab_default_2" data-toggle="tab">
                                File Management
                            </a>
                        </li>
                        <li>
                            <a href="#tab_default_3" data-toggle="tab">
                                Additional Information
                            </a>
                        </li>
                        <li>
                            <a href="#tab_default_4" data-toggle="tab">
                                Data & Multi drop
                            </a>
                        </li>
                        <li>
                            <a href="#tab_default_5" data-toggle="tab">
                                Digital Plus
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tab_default_1">
                            
                        <div class="row">
                        <div class="col-md-6">
                            <div class="headertab">
                                Campaign Details
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CampaignName, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.CampaignName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CampaignName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BroadcastDate, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.BroadcastDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BroadcastDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RepresentativeName, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.RepresentativeName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RepresentativeName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RepresentativeEmail, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.RepresentativeEmail, new { @type = "email", htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RepresentativeEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ReBroadCast, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    <div class="">
                                        <div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                                            <label class="btn btn-primary">
                                                @Html.RadioButtonFor(model => model.ReBroadCast, "True")Yes
                                            </label>
                                            <label class="btn btn-primary">
                                                @Html.RadioButtonFor(model => model.ReBroadCast, "False")No
                                            </label>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ReBroadCast, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ReBroadcastDate, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.ReBroadcastDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ReBroadcastDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TestingUrgency, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownList("TestingUrgency", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TestingUrgency, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                   
                        <div class="col-md-6">
                                
                                <div class="headertab">
                                    Campaign Demographics
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.GeoDetails, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.GeoDetails, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.GeoDetails, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Demographics, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Demographics, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Demographics, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="headertab">
                                    Campaign Testing
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FromLine, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.FromLine, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FromLine, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SubjectLine, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.SubjectLine, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SubjectLine, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                        </div>

                        </div>
                        <div class="tab-pane" id="tab_default_2">
                            
                            <div class="headertab">
                                File Management
                            </div>
                            
                            <div class="row">
                                
                                <div class="col-md-6">
                                    
                                    <div class="form-group">
                                        <div class="control-label col-md-3">
                                            Zip Code File
                                            <a href="/Templates/SampleZipFile.csv">Sample Zip File</a>
                                        </div>
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Assets.ZipCodeFile, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.Partial("_UploadFile", new UploadFileVM() { FileType = "Assets_ZipCodeFile", OrderNumber = Model.OrderNumber })
                                            @Html.ValidationMessageFor(model => model.Assets.ZipCodeFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="control-label col-md-3">
                                            Test Seed File
                                            <a href="/Templates/SampleTestSeed.csv">Sample Test Seed File</a>
                                        </div>
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Assets.TestSeedFile, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.Partial("_UploadFile", new UploadFileVM() { FileType = "Assets_TestSeedFile", OrderNumber = Model.OrderNumber })
                                            @Html.ValidationMessageFor(model => model.Assets.TestSeedFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="control-label col-md-3">
                                            Final Seed File
                                            <a href="/Templates/SampleLiveSeed.csv">Sample Live Seed File</a>
                                        </div>
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Assets.LiveSeedFile, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.Partial("_UploadFile", new UploadFileVM() { FileType = "Assets_LiveSeedFile", OrderNumber = Model.OrderNumber })
                                            @Html.ValidationMessageFor(model => model.Assets.LiveSeedFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    
                                </div>
                                
                                <div class="col-md-6">
                                    
                                    <div class="form-group">
                                        <div class="control-label col-md-3">
                                            Suppression File <br />
                                            <a href="/Templates/SampleSuppression.csv">Sample Suppression File</a>
                                        </div>
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Assets.SuppressionFile, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.Partial("_UploadFile", new UploadFileVM() { FileType = "Assets_SuppressionFile", OrderNumber = Model.OrderNumber })
                                            @Html.ValidationMessageFor(model => model.Assets.SuppressionFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="control-label col-md-3">
                                            HtmlImageFiles
                                        </div>
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Assets.CreativeFiles, new {disabled = "disabled", htmlAttributes = new {@class = "form-control"}})
                                            @Html.Partial("_UploadFile", new UploadFileVM() {FileType = "Assets_CreativeFiles", OrderNumber = Model.OrderNumber})
                                            @Html.ValidationMessageFor(model => model.Assets.CreativeFiles, "", new {@class = "text-danger"})
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-3">Add OptOut</label>
                                        <div class="col-md-9">
                                            <div class="">
                                                <div class="btn-group" data-toggle="buttons" style="padding-bottom: 10px">
                                                    <label class="btn btn-primary">
                                                        @Html.RadioButtonFor(model => model.IsAddOptOut, "True")Yes
                                                    </label>
                                                    <label class="btn btn-primary">
                                                        @Html.RadioButtonFor(model => model.IsAddOptOut, "False")No
                                                    </label>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.IsAddOptOut, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-3">Add ViewInBrowser</label>
                                        <div class="col-md-9">
                                            <div class="">
                                                <div class="btn-group" data-toggle="buttons" style="padding-bottom: 10px">
                                                    <label class="btn btn-primary">
                                                        @Html.RadioButtonFor(model => model.IsAddViewInBrowser, "True")Yes
                                                    </label>
                                                    <label class="btn btn-primary">
                                                        @Html.RadioButtonFor(model => model.IsAddViewInBrowser, "False")No
                                                    </label>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.IsAddViewInBrowser, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                          
                        </div>
                    <div class="tab-pane" id="tab_default_3">
                        <div class="headertab">
                            Additional Information
                        </div>
                        <div class="row">
                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsPersonalization, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        <div class="">
                                            <div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsPersonalization, "True")Yes
                                                </label>
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsPersonalization, "False")No
                                                </label>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.IsPersonalization, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsMatchback, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        <div class="">
                                            <div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsMatchback, "True")Yes
                                                </label>
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsMatchback, "False")No
                                                </label>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.IsMatchback, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsSuppression, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        <div class="">
                                            <div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsSuppression, "True")Yes
                                                </label>
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsSuppression, "False")No
                                                </label>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.IsSuppression, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsOpenPixel, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        <div class="">
                                            <div class="btn-group" data-toggle="buttons" style="padding-bottom: 10px">
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsOpenPixel, "True")Yes
                                                </label>
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsOpenPixel, "False")No
                                                </label>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.IsOpenPixel, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OpenPixelUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.OpenPixelUrl, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OpenPixelUrl, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.WhiteLabel, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("WhiteLabel", null, htmlAttributes: new { @class = "form-control" })
                                        @*@Html.EditorFor(model => model.WhiteLabel, new {htmlAttributes = new {@class = "form-control"}})*@
                                        @Html.ValidationMessageFor(model => model.WhiteLabel, "", new {@class = "text-danger"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OptOut, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.OptOut, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OptOut, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SpecialInstructions, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.TextAreaFor(model => model.SpecialInstructions, new { @class = "form-control", rows = "6", cols = "10" })
                                        @Html.ValidationMessageFor(model => model.SpecialInstructions, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                         
                    </div>
                        
                    <div class="tab-pane" id="tab_default_4">
                        <div class="headertab">
                            Data & Multi drop
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DataFileQuantity, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.DataFileQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DataFileQuantity, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <a id="addSegment" class="btn btn-primary" data-tooltip="tooltip" title="Add another drop" href="javascript:;">
                                        Add another drop
                                    </a>
                                </div>
                            </div>
                        </div>
                        


                    </div>
                        
                    <div class="tab-pane" id="tab_default_5">
                        
                        <div class="headertab">
                            Digital Plus
                        </div>
                        <div class="row">
                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsOmniOrder, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        <div class="">
                                            <div class="btn-group" data-toggle="buttons" style="padding-bottom: 10px">
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsOmniOrder, "True")Yes
                                                </label>
                                                <label class="btn btn-primary">
                                                    @Html.RadioButtonFor(model => model.IsOmniOrder, "False")No
                                                </label>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.IsOmniOrder, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OmniDeployDate, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.OmniDeployDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OmniDeployDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Impressions, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Impressions, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Impressions, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label class="control-label col-md-3">Chanel Type</label>
                                    <div class="col-md-9">
                                        <div class="input-group">
                                            @foreach (var value in Enum.GetValues(typeof(ChannelType)))
                                            {
                                                var id = "dayofweek" + value;
                                                var name = Enum.GetName(typeof(ChannelType), value);
                                                ChannelType e = (ChannelType)value;
                                                var isChecked = Model.ChannelTypes.Contains(e) ? "checked" : "";

                                                <div class="checkbox checkbox-primary">
                                                    <input id="@id" type="checkbox" value="@value" name="ChannelTypes" @isChecked />
                                                    <label for="@id" class="control-label">@name </label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Assets.BannersFile, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Assets.BannersFile, new { disabled = "disabled", htmlAttributes = new { @class = "form-control" } })
                                        @Html.Partial("_UploadFile", new UploadFileVM() { FileType = "Assets_BannersFile", OrderNumber = Model.OrderNumber })
                                        @Html.ValidationMessageFor(model => model.Assets.BannersFile, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Assets.BannerLinksFile, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Assets.BannerLinksFile, new { disabled = "disabled", htmlAttributes = new { @class = "form-control" } })
                                        @Html.Partial("_UploadFile", new UploadFileVM() { FileType = "Assets_BannerLinksFile", OrderNumber = Model.OrderNumber })
                                        @Html.ValidationMessageFor(model => model.Assets.BannerLinksFile, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Assets.MiscFile, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Assets.MiscFile, new { disabled = "disabled", htmlAttributes = new { @class = "form-control" } })
                                        @Html.Partial("_UploadFile", new UploadFileVM() { FileType = "Assets_MiscFile", OrderNumber = Model.OrderNumber })
                                        @Html.ValidationMessageFor(model => model.Assets.MiscFile, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    </div>
                </div>
            </div>

        <div class="row">
            <div class="col-md-6"></div>
            <div class="col-md-6 pull-right">
                <div class="form-group pull-right">
                    <input type="submit" value="Place Order" class="btn btn-default" />
                    &nbsp;&nbsp;@Html.ActionLink("Back to Orders", "Index")
                </div>
            </div>
        </div>
            <br /><br />
        </div>
        }

        <script type="text/javascript">

            var wfp = wfp || {};

            $(function () {

                $('#form1').bind('submit', function () {
                    debugger;
                    $('#WhiteLabel').removeAttr("disabled");
                    //$(this).find(':select').prop('disabled', false);
                });

                var isAdmin = '@IsAdmin' === 'True';
                if (!isAdmin)
                    $('#WhiteLabel').prop("disabled", "disabled");

                $('#BroadcastDate').datetimepicker({
                    format: 'M/DD/YYYY hh:mm:ss A'
                });
                $('#ReBroadcastDate').datetimepicker({
                    format: 'M/DD/YYYY hh:mm:ss A'
                });
                $('#TestingEndTime').datetimepicker({
                    format: 'M/DD/YYYY hh:mm:ss A'
                });
                $('#OmniDeployDate').datetimepicker({
                    format: 'M/DD/YYYY hh:mm:ss A'
                });

                $('#RepresentativeName').prop('readonly', "readonly");
                $('#RepresentativeEmail').prop('readonly', "readonly");

                $('#Assets_ZipCodeFile').prop('readonly', "readonly");
                $('#Assets_CreativeFiles').prop('readonly', "readonly");
                $('#Assets_TestSeedFile').prop('readonly', "readonly");
                $('#Assets_LiveSeedFile').prop('readonly', "readonly");
                $('#Assets_SuppressionFile').prop('readonly', "readonly");
                $('#Assets_BannersFile').prop('readonly', "readonly");
                $('#Assets_BannerLinksFile').prop('readonly', "readonly");
                $('#Assets_MiscFile').prop('readonly', "readonly");

                $("input[name='ReBroadCast']:checked").closest("label.btn").addClass("active");
                $("input[name='IsPersonalization']:checked").closest("label.btn").addClass("active");
                $("input[name='IsMatchback']:checked").closest("label.btn").addClass("active");
                $("input[name='IsSuppression']:checked").closest("label.btn").addClass("active");
                $("input[name='IsOmniOrder']:checked").closest("label.btn").addClass("active");
                $("input[name='IsAddOptOut']:checked").closest("label.btn").addClass("active");
                $("input[name='IsAddViewInBrowser']:checked").closest("label.btn").addClass("active");
                $("input[name='IsOpenPixel']:checked").closest("label.btn").addClass("active");

                $('#addSegment').click(function (e) {
                    $.get('/Campaigns/NewSegment', function (template) {
                        $('#tab_default_4').append(template);
                        $('[data-tooltip="tooltip"]').tooltip();
                    });
                    e.preventDefault();
                });
            });
        </script>
