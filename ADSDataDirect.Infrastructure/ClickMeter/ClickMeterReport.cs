// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ADSDataDirect.Infrastructure.ClickMeter;
//
//    var clickMeterReport = ClickMeterReport.FromJson(jsonString);

namespace ADSDataDirect.Infrastructure.ClickMeter
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ClickMeterReport
    {
        [JsonProperty("createdAt")]
        public string CreatedAt { get; set; }

        [JsonProperty("data")]
        public Datum[] Data { get; set; }
    }

    public partial class Datum
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("totalHits")]
        public long TotalHits { get; set; }

        [JsonProperty("uniqueHits")]
        public long UniqueHits { get; set; }

        [JsonProperty("lastHitDate")]
        public string LastHitDate { get; set; }
    }

    public partial class ClickMeterReport
    {
        public static ClickMeterReport FromJson(string json) => JsonConvert.DeserializeObject<ClickMeterReport>(json, ADSDataDirect.Infrastructure.ClickMeter.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this ClickMeterReport self) => JsonConvert.SerializeObject(self, ADSDataDirect.Infrastructure.ClickMeter.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
