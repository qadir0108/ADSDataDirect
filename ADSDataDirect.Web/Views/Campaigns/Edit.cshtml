@model ADSDataDirect.Core.Entities.Campaign

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit <span class="small">Campaign</span></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreatedAt)
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.IP)
        @Html.HiddenFor(model => model.Browser)
        @Html.HiddenFor(model => model.OS)
        @Html.HiddenFor(model => model.Referrer)

        @*<div class="form-group">
                @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <hr />
        <div class="headertab">
            Campaign Details
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.CampaignName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CampaignName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CampaignName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BroadcastDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BroadcastDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BroadcastDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepresentativeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepresentativeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RepresentativeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepresentativeEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepresentativeEmail, new { @type = "email", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RepresentativeEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReBroadCast, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="">
                    <div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                        <label class="btn btn-primary">
                            @Html.RadioButtonFor(model => model.ReBroadCast, "True")Yes
                        </label>
                        <label class="btn btn-primary">
                            @Html.RadioButtonFor(model => model.ReBroadCast, "False")No
                        </label>
                    </div>
                    @*@Html.CheckBoxFor(model => model.ReBroadCast)*@
                    @Html.ValidationMessageFor(model => model.ReBroadCast, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReBroadcastDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReBroadcastDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReBroadcastDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TestingUrgency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.TestingUrgency, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("TestingUrgency", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TestingUrgency, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <div class="headertab">
            Campaign Demographics
        </div><hr />

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCodeFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCodeFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.Partial("_UploadFile", "ZipCodeFile")
                @Html.ValidationMessageFor(model => model.ZipCodeFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GeoDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GeoDetails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GeoDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Demographics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Demographics, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Demographics, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>


        <hr />
        <div class="headertab">
            Campaign Testing
        </div><hr />

        <div class="form-group">
            @Html.LabelFor(model => model.FromLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromLine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromLine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubjectLine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubjectLine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HtmlImageFiles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HtmlImageFiles, new { disabled = "disabled", htmlAttributes = new { @class = "form-control" } })
                @Html.Partial("_UploadFile", "HtmlImageFiles")
                @Html.ValidationMessageFor(model => model.HtmlImageFiles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TestSeedList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestSeedList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.Partial("_UploadFile", "TestSeedList")
                @Html.ValidationMessageFor(model => model.TestSeedList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinalSeedList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinalSeedList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.Partial("_UploadFile", "FinalSeedList")
                @Html.ValidationMessageFor(model => model.FinalSeedList, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <div class="headertab">
            Additional Info
        </div><hr />

        <div class="form-group">
            @Html.LabelFor(model => model.SuppressionFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SuppressionFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.Partial("_UploadFile", "SuppressionFile")
                @Html.ValidationMessageFor(model => model.SuppressionFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPersonalization, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="">
                    <div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                        <label class="btn btn-primary">
                            @Html.RadioButtonFor(model => model.IsPersonalization, "True")Yes
                        </label>
                        <label class="btn btn-primary">
                            @Html.RadioButtonFor(model => model.IsPersonalization, "False")No
                        </label>
                    </div>
                    @*@Html.EditorFor(model => model.IsPersonalization)*@
                    @Html.ValidationMessageFor(model => model.IsPersonalization, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsMatchback, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="">
                    <div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                        <label class="btn btn-primary">
                            @Html.RadioButtonFor(model => model.IsMatchback, "True")Yes
                        </label>
                        <label class="btn btn-primary">
                            @Html.RadioButtonFor(model => model.IsMatchback, "False")No
                        </label>
                    </div>
                    @*@Html.EditorFor(model => model.IsMatchback)*@
                    @Html.ValidationMessageFor(model => model.IsMatchback, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSuppression, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="">
                    <div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                        <label class="btn btn-primary">
                            @Html.RadioButtonFor(model => model.IsSuppression, "True")Yes
                        </label>
                        <label class="btn btn-primary">
                            @Html.RadioButtonFor(model => model.IsSuppression, "False")No
                        </label>
                    </div>
                    @*@Html.EditorFor(model => model.IsSuppression)*@
                    @Html.ValidationMessageFor(model => model.IsSuppression, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WhiteLabel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WhiteLabel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WhiteLabel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OptOut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptOut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialInstructions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.SpecialInstructions, new { @class = "form-control", rows = "6", cols = "10" })
                @Html.ValidationMessageFor(model => model.SpecialInstructions, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @Html.HiddenFor(model => model.OrderNumber)
        @Html.HiddenFor(model => model.Status)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
                &nbsp;&nbsp;@Html.ActionLink("Back to Orders", "Index")
            </div>
        </div>
    </div>
}

<div>
   
</div>


<script type="text/javascript">

            var wfp = wfp || {};

            $(function () {

                $('#BroadcastDate').datetimepicker({
                    format: 'M/DD/YYYY hh:mm:ss A'
                });
                $('#ReBroadcastDate').datetimepicker({
                    format: 'M/DD/YYYY hh:mm:ss A'
                });

                $('#ZipCodeFile').prop('readonly', "readonly");
                $('#HtmlImageFiles').prop('readonly', "readonly");
                $('#TestSeedList').prop('readonly', "readonly");
                $('#FinalSeedList').prop('readonly', "readonly");
                $('#SuppressionFile').prop('readonly', "readonly");
                  
                $("input[name='ReBroadCast']:checked").closest("label.btn").addClass("active");
                $("input[name='IsPersonalization']:checked").closest("label.btn").addClass("active");
                $("input[name='IsMatchback']:checked").closest("label.btn").addClass("active");
                $("input[name='IsSuppression']:checked").closest("label.btn").addClass("active");

            });
</script>